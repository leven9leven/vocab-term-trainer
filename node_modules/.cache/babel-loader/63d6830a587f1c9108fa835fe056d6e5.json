{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/React/quizapp/vocab-app/src/views/Practice.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nconst Styles = styled.div`\n  .flashcards-div {\n    padding-top: 20px;\n    width: 700px;\n    align-content: center;\n    margin: 0 auto;\n  }\n\n  .btn {\n    margin: 20px;\n    margin-bottom: 0px;\n  }\n`;\n\nconst Practice = props => {\n  console.log(\"practice\", props.location.inputSet);\n  const [showFlashcards, toggleFlashcards] = useState(false);\n  const [showWrite, toggleWrite] = useState(false);\n  const [questionNum, updateActiveQuestion] = useState(0);\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flashcards-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Welcome to practice!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Select mode below\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"primary\",\n    onClick: () => toggleFlashcards(!showFlashcards),\n    \"aria-controls\": \"flashcards-show\",\n    \"aria-expanded\": showFlashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Flashcards\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"primary\",\n    onClick: () => toggleWrite(!showWrite),\n    \"aria-controls\": \"write-show\",\n    \"aria-expanded\": showWrite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Write\"))), /*#__PURE__*/React.createElement(Collapse, {\n    in: showFlashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"flashcards-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Hello, world!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Flip\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Next\"))))), /*#__PURE__*/React.createElement(Collapse, {\n    in: showWrite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"write-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Write\")))));\n};\n\nexport default Practice;","map":{"version":3,"sources":["/Users/rb/Desktop/React/quizapp/vocab-app/src/views/Practice.js"],"names":["React","useState","styled","Jumbotron","Button","Collapse","Styles","div","Practice","props","console","log","location","inputSet","showFlashcards","toggleFlashcards","showWrite","toggleWrite","questionNum","updateActiveQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;CAA1B;;AAcA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAK,CAACG,QAAN,CAAeC,QAAvC;AACA,QAAM,CAACC,cAAD,EAAiBC,gBAAjB,IAAqCd,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAACe,SAAD,EAAYC,WAAZ,IAA2BhB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACiB,WAAD,EAAcC,oBAAd,IAAsClB,QAAQ,CAAC,CAAD,CAApD;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sIAHF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,OAAO,EAAE,MAAMc,gBAAgB,CAAC,CAACD,cAAF,CAHjC;AAIE,qBAAc,iBAJhB;AAKE,qBAAeA,cALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,OAAO,EAAE,MAAMG,WAAW,CAAC,CAACD,SAAF,CAH5B;AAIE,qBAAc,YAJhB;AAKE,qBAAeA,SALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,CAPF,CADF,eA8BE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEF,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sIAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CANF,CADF,CADF,CA9BF,eA8CE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CA9CF,CADF,CADF;AAwDD,CA9DD;;AAgEA,eAAeR,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\n\nconst Styles = styled.div`\n  .flashcards-div {\n    padding-top: 20px;\n    width: 700px;\n    align-content: center;\n    margin: 0 auto;\n  }\n\n  .btn {\n    margin: 20px;\n    margin-bottom: 0px;\n  }\n`;\n\nconst Practice = (props) => {\n  console.log(\"practice\", props.location.inputSet);\n  const [showFlashcards, toggleFlashcards] = useState(false);\n  const [showWrite, toggleWrite] = useState(false);\n  const [questionNum, updateActiveQuestion] = useState(0);\n\n  return (\n    <Styles>\n      <div className=\"flashcards-div\">\n        <Jumbotron>\n          <h1>Welcome to practice!</h1>\n          <h3>Select mode below</h3>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or\n            information.\n          </p>\n          <p>\n            <Button\n              className=\"btn\"\n              variant=\"primary\"\n              onClick={() => toggleFlashcards(!showFlashcards)}\n              aria-controls=\"flashcards-show\"\n              aria-expanded={showFlashcards}\n            >\n              Flashcards\n            </Button>\n            <Button\n              className=\"btn\"\n              variant=\"primary\"\n              onClick={() => toggleWrite(!showWrite)}\n              aria-controls=\"write-show\"\n              aria-expanded={showWrite}\n            >\n              Write\n            </Button>\n          </p>\n        </Jumbotron>\n\n        <Collapse in={showFlashcards}>\n          <div id=\"flashcards-show\">\n            <Jumbotron>\n              <h1>Hello, world!</h1>\n              <p>\n                This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured\n                content or information.\n              </p>\n              <p>\n                <Button variant=\"primary\">Flip</Button>\n                <Button variant=\"primary\">Next</Button>\n              </p>\n            </Jumbotron>\n          </div>\n        </Collapse>\n\n        <Collapse in={showWrite}>\n          <div id=\"write-show\">\n            <h1>Write</h1>\n          </div>\n        </Collapse>\n      </div>\n    </Styles>\n  );\n};\n\nexport default Practice;\n"]},"metadata":{},"sourceType":"module"}