{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/React/quizapp/vocab-app/src/components/SetForm.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { DataContext } from \"../Store\";\nconst Styles = styled.div`\n  .container {\n    padding-top: 20px;\n    width: 500px;\n    align-content: center;\n  }\n\n  .form-group {\n    text-align: left;\n  }\n\n  .btn {\n    margin: 15px;\n    margin-top: 0px;\n  }\n`;\nexport default function SetForm({\n  newSet,\n  updateCallback\n}) {\n  const [formData, setFormData] = useState({\n    setName: \"\",\n    description: \"\"\n  });\n  const [data, setData] = useContext(DataContext);\n  const [submitText, setText] = useState(\"Add\"); // same as componentWillReceiveProps\n\n  useEffect(() => {\n    console.log(newSet);\n    setFormData({\n      setName: newSet.setName,\n      description: newSet.description\n    });\n\n    if (newSet.id != null) {\n      setText(\"Update\");\n    } else {\n      setText(\"Add\");\n    }\n  }, [newSet]);\n\n  const handleSetName = event => {\n    event.persist();\n    setFormData(formData => ({ ...formData,\n      setName: event.target.value\n    }));\n  };\n\n  const handleDescription = event => {\n    event.persist();\n    setFormData(formData => ({ ...formData,\n      description: event.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newSet.id === null) {\n      const insertForm = {\n        id: Math.floor(Math.random() * 99999999),\n        setName: formData.setName,\n        description: formData.description,\n        questions: []\n      };\n      setData([...data, insertForm]);\n      setFormData({\n        setName: \"\",\n        description: \"\"\n      });\n    } else {\n      let tempData = data;\n      tempData[newSet.index] = {\n        id: newSet.id,\n        setName: formData.setName,\n        description: formData.description,\n        questions: newSet.questions\n      };\n      console.log(tempData); // setData(tempData);\n\n      updateCallback(tempData); // perform callback that resets the id and other parameters in sets.js\n    }\n  };\n\n  const handleReset = e => {\n    e.preventDefault();\n    setFormData({\n      setName: \"\",\n      description: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Enter the name of your vocab set\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Name\",\n    onChange: handleSetName,\n    value: formData.setName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Enter a short description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Description\",\n    onChange: handleDescription,\n    value: formData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, submitText), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    type: \"submit\",\n    onClick: e => handleReset(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Reset\"))));\n}","map":{"version":3,"sources":["/Users/rb/Desktop/React/quizapp/vocab-app/src/components/SetForm.js"],"names":["React","useState","useContext","useEffect","styled","Form","Button","DataContext","Styles","div","SetForm","newSet","updateCallback","formData","setFormData","setName","description","data","setData","submitText","setText","console","log","id","handleSetName","event","persist","target","value","handleDescription","handleSubmit","e","preventDefault","insertForm","Math","floor","random","questions","tempData","index","handleReset"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { DataContext } from \"../Store\";\n\nconst Styles = styled.div`\n  .container {\n    padding-top: 20px;\n    width: 500px;\n    align-content: center;\n  }\n\n  .form-group {\n    text-align: left;\n  }\n\n  .btn {\n    margin: 15px;\n    margin-top: 0px;\n  }\n`;\n\nexport default function SetForm({ newSet, updateCallback }) {\n  const [formData, setFormData] = useState({ setName: \"\", description: \"\" });\n  const [data, setData] = useContext(DataContext);\n  const [submitText, setText] = useState(\"Add\");\n\n  // same as componentWillReceiveProps\n  useEffect(() => {\n    console.log(newSet);\n    setFormData({ setName: newSet.setName, description: newSet.description });\n    if (newSet.id != null) {\n      setText(\"Update\");\n    } else {\n      setText(\"Add\");\n    }\n  }, [newSet]);\n\n  const handleSetName = (event) => {\n    event.persist();\n    setFormData((formData) => ({\n      ...formData,\n      setName: event.target.value,\n    }));\n  };\n\n  const handleDescription = (event) => {\n    event.persist();\n    setFormData((formData) => ({\n      ...formData,\n      description: event.target.value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (newSet.id === null) {\n      const insertForm = {\n        id: Math.floor(Math.random() * 99999999),\n        setName: formData.setName,\n        description: formData.description,\n        questions: [],\n      };\n      setData([...data, insertForm]);\n      setFormData({ setName: \"\", description: \"\" });\n    } else {\n      let tempData = data;\n      tempData[newSet.index] = {\n        id: newSet.id,\n        setName: formData.setName,\n        description: formData.description,\n        questions: newSet.questions,\n      };\n      console.log(tempData);\n      // setData(tempData);\n      updateCallback(tempData);\n      // perform callback that resets the id and other parameters in sets.js\n    }\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setFormData({ setName: \"\", description: \"\" });\n  };\n\n  return (\n    <Styles>\n      <div className=\"container\">\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\" className=\"form-group\">\n            <Form.Label>Enter the name of your vocab set</Form.Label>\n            <Form.Control placeholder=\"Name\" onChange={handleSetName} value={formData.setName} />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\" className=\"form-group\">\n            <Form.Label>Enter a short description</Form.Label>\n            <Form.Control placeholder=\"Description\" onChange={handleDescription} value={formData.description} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSubmit(e)}>\n            {submitText}\n          </Button>\n\n          <Button variant=\"danger\" type=\"submit\" onClick={(e) => handleReset(e)}>\n            Reset\n          </Button>\n        </Form>\n      </div>\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}