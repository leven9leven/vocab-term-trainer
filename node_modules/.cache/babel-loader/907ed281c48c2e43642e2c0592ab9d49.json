{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/React/quizapp/vocab-app/src/components/QuestionForm.js\";\nimport React, { useState, useContext } from \"react\";\nimport { DataContext } from \"../Store\";\nimport styled from \"styled-components\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nconst Styles = styled.div`\n  .btns {\n    text-align: center;\n  }\n\n  .form-group {\n    text-align: left;\n  }\n\n  .divider {\n    border-top: 8px solid lightblue;\n    border-radius: 5px;\n  }\n\n  .question-btns {\n    padding-bottom: 20px;\n  }\n\n  .btn {\n    margin: 15px;\n  }\n`;\nexport default function QuestionForm({\n  questions,\n  currIndex,\n  closeCallback\n}) {\n  // Global state storing all sets\n  const [data, setData] = useContext(DataContext);\n  const [currQuestions, updateQuestions] = useState(questions);\n\n  const handleSave = e => {\n    e.preventDefault();\n    let tempData = data;\n    tempData[currIndex].questions = currQuestions;\n    setData(tempData); // Perform callback to close the tab of questions\n    // Current bug from bootstrap/react -> animation does not occur\n\n    closeCallback(currIndex);\n  };\n\n  const handleAddQuestion = e => {\n    e.preventDefault();\n    updateQuestions([...currQuestions, {\n      question: \"\",\n      answer: \"\"\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, currQuestions.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-container\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Question\"), /*#__PURE__*/React.createElement(Col, {\n    sm: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    defaultValue: question.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    defaultValue: question.answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: e => handleSave(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Save and Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    type: \"submit\",\n    onClick: e => handleAddQuestion(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Add Question\")));\n}","map":{"version":3,"sources":["/Users/rb/Desktop/React/quizapp/vocab-app/src/components/QuestionForm.js"],"names":["React","useState","useContext","DataContext","styled","Form","Button","Styles","div","QuestionForm","questions","currIndex","closeCallback","data","setData","currQuestions","updateQuestions","handleSave","e","preventDefault","tempData","handleAddQuestion","question","answer","map","index","Row"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { DataContext } from \"../Store\";\n\nimport styled from \"styled-components\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Styles = styled.div`\n  .btns {\n    text-align: center;\n  }\n\n  .form-group {\n    text-align: left;\n  }\n\n  .divider {\n    border-top: 8px solid lightblue;\n    border-radius: 5px;\n  }\n\n  .question-btns {\n    padding-bottom: 20px;\n  }\n\n  .btn {\n    margin: 15px;\n  }\n`;\n\nexport default function QuestionForm({ questions, currIndex, closeCallback }) {\n  // Global state storing all sets\n  const [data, setData] = useContext(DataContext);\n\n  const [currQuestions, updateQuestions] = useState(questions);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n\n    let tempData = data;\n    tempData[currIndex].questions = currQuestions;\n    setData(tempData);\n\n    // Perform callback to close the tab of questions\n    // Current bug from bootstrap/react -> animation does not occur\n    closeCallback(currIndex);\n  };\n\n  const handleAddQuestion = (e) => {\n    e.preventDefault();\n    updateQuestions([...currQuestions, { question: \"\", answer: \"\" }]);\n  };\n\n  return (\n    <Styles>\n      {currQuestions.map((question, index) => (\n        <div className=\"question-container\" key={index}>\n          <Form>\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"2\">\n                Question\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control type=\"text\" defaultValue={question.question} />\n              </Col>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Control type=\"text\" defaultValue={question.answer} />\n            </Form.Group>\n          </Form>\n          <hr className=\"divider\" />\n        </div>\n      ))}\n\n      <div className=\"question-btns\">\n        <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSave(e)}>\n          Save and Close\n        </Button>\n\n        <Button variant=\"secondary\" type=\"submit\" onClick={(e) => handleAddQuestion(e)}>\n          Add Question\n        </Button>\n      </div>\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}