{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/React/quizapp/vocab-app/src/views/Sets.js\";\n// import React from \"react\";\nimport React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport SetForm from \"../components/SetForm\";\nimport { DataContext } from \"../Store\";\nconst Styles = styled.div`\n  .container {\n    padding-top: 20px;\n    width: 500px;\n    align-content: center;\n  }\n\n  .card {\n    padding: 15px;\n    text-align: left;\n  }\n\n  .badge {\n    margin-left: 5px;\n  }\n\n  .btns {\n    text-align: center;\n  }\n`;\nexport default function Sets() {\n  const [data] = useContext(DataContext);\n  useEffect(() => {\n    console.log(data);\n  });\n\n  const editSet = set => {\n    console.log(set);\n  };\n\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SetForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), data.map((set, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, set.setName, \" \", /*#__PURE__*/React.createElement(Badge, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, set.questions.length), /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"#\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, \"+\"))), /*#__PURE__*/React.createElement(Card.Subtitle, {\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Vocab set\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, set.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card.Link, {\n    onClick: () => editSet(set),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"#\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"#\",\n    style: {\n      color: \"seagreen\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Practice\")))))));\n}","map":{"version":3,"sources":["/Users/rb/Desktop/React/quizapp/vocab-app/src/views/Sets.js"],"names":["React","useContext","useEffect","styled","Card","Badge","SetForm","DataContext","Styles","div","Sets","data","console","log","editSet","set","map","index","setName","questions","length","marginLeft","description","color"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,WAAT,QAA4B,UAA5B;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;;;;;;;;;;;CAA1B;AAqBA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,IAAD,IAASV,UAAU,CAACM,WAAD,CAAzB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFQ,CAAT;;AAIA,QAAMG,OAAO,GAAIC,GAAD,IAAS;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAFD;;AAGA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,IAAI,CAACK,GAAL,CAAS,CAACD,GAAD,EAAME,KAAN,kBACR;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,GAAG,CAACG,OADP,oBACgB,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,GAAG,CAACI,SAAJ,CAAcC,MAAxC,CADhB,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,GAAhB;AAAoB,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,CADF,eASE,oBAAC,IAAD,CAAM,QAAN;AAAe,IAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,eAUE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYN,GAAG,CAACO,WAAhB,CAVF,eAWE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,OAAO,EAAE,MAAMR,OAAO,CAACC,GAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,GAAhB;AAAoB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,GAAhB;AAAoB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAXF,CADF,CADF,CADD,CAFH,CADF;AAgCD","sourcesContent":["// import React from \"react\";\nimport React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport SetForm from \"../components/SetForm\";\n\nimport { DataContext } from \"../Store\";\n\nconst Styles = styled.div`\n  .container {\n    padding-top: 20px;\n    width: 500px;\n    align-content: center;\n  }\n\n  .card {\n    padding: 15px;\n    text-align: left;\n  }\n\n  .badge {\n    margin-left: 5px;\n  }\n\n  .btns {\n    text-align: center;\n  }\n`;\n\nexport default function Sets() {\n  const [data] = useContext(DataContext);\n\n  useEffect(() => {\n    console.log(data);\n  });\n\n  const editSet = (set) => {\n    console.log(set);\n  };\n  return (\n    <Styles>\n      <SetForm />\n      {data.map((set, index) => (\n        <div className=\"container\" key={index}>\n          <Card style={{}}>\n            <Card.Body>\n              <Card.Title>\n                <h3>\n                  {set.setName} <Badge variant=\"primary\">{set.questions.length}</Badge>\n                  <Card.Link href=\"#\" style={{ marginLeft: \"10px\" }}>\n                    +\n                  </Card.Link>\n                </h3>\n              </Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">Vocab set</Card.Subtitle>\n              <Card.Text>{set.description}</Card.Text>\n              <div className=\"btns\">\n                <Card.Link onClick={() => editSet(set)}>Edit</Card.Link>\n                <Card.Link href=\"#\" style={{ color: \"red\" }}>\n                  Delete\n                </Card.Link>\n                <Card.Link href=\"#\" style={{ color: \"seagreen\" }}>\n                  Practice\n                </Card.Link>\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n      ))}\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}