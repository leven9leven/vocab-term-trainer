{"ast":null,"code":"var _jsxFileName = \"/Users/rb/Desktop/React/quizapp/vocab-app/src/views/Practice.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nconst Styles = styled.div`\n  .flashcards-div {\n    padding-top: 20px;\n    width: 700px;\n    align-content: center;\n    margin: 0 auto;\n  }\n\n  .btn {\n    margin: 20px;\n    margin-bottom: 0px;\n  }\n\n  .btn-flashcard {\n    margin-top: 70px;\n    margin-bottom: -30px;\n  }\n`;\n\nconst Practice = props => {\n  console.log(\"practice\", props.location.inputSet);\n  const [showFlashcards, toggleFlashcards] = useState(false);\n  const [showWrite, toggleWrite] = useState(false);\n  const [questionNum, updateActiveQuestion] = useState(0);\n  const [cardDisplay, updateCardState] = useState({\n    side: 0,\n    display: props.location.inputSet.questions[questionNum].question\n  });\n\n  const flipCard = () => {\n    if (cardDisplay.side === 0) {\n      updateCardState({\n        side: 1,\n        display: props.location.inputSet.questions[questionNum].answer\n      });\n    } else {\n      updateCardState({\n        side: 0,\n        display: props.location.inputSet.questions[questionNum].question\n      });\n    }\n  };\n\n  const incrementQuestion = () => {\n    updateActiveQuestion(questionNum + 1);\n  };\n\n  useEffect(() => {\n    updateCardState({\n      side: 1,\n      display: props.location.inputSet.questions[questionNum].question\n    });\n  }, [props.location.inputSet.questions, questionNum]);\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flashcards-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Welcome to practice!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Select mode below\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"primary\",\n    onClick: () => toggleFlashcards(!showFlashcards),\n    \"aria-controls\": \"flashcards-show\",\n    \"aria-expanded\": showFlashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Flashcards\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"primary\",\n    onClick: () => toggleWrite(!showWrite),\n    \"aria-controls\": \"write-show\",\n    \"aria-expanded\": showWrite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Write\"))), /*#__PURE__*/React.createElement(Collapse, {\n    in: showFlashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"flashcards-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, cardDisplay.display), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-flashcard\",\n    variant: \"primary\",\n    onClick: flipCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Flip\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-flashcard\",\n    variant: \"success\",\n    onClick: incrementQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Next\"))))), /*#__PURE__*/React.createElement(Collapse, {\n    in: showWrite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"write-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Write\")))));\n};\n\nexport default Practice;","map":{"version":3,"sources":["/Users/rb/Desktop/React/quizapp/vocab-app/src/views/Practice.js"],"names":["React","useState","useEffect","styled","Jumbotron","Button","Collapse","Styles","div","Practice","props","console","log","location","inputSet","showFlashcards","toggleFlashcards","showWrite","toggleWrite","questionNum","updateActiveQuestion","cardDisplay","updateCardState","side","display","questions","question","flipCard","answer","incrementQuestion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\n\nconst Styles = styled.div`\n  .flashcards-div {\n    padding-top: 20px;\n    width: 700px;\n    align-content: center;\n    margin: 0 auto;\n  }\n\n  .btn {\n    margin: 20px;\n    margin-bottom: 0px;\n  }\n\n  .btn-flashcard {\n    margin-top: 70px;\n    margin-bottom: -30px;\n  }\n`;\n\nconst Practice = (props) => {\n  console.log(\"practice\", props.location.inputSet);\n  const [showFlashcards, toggleFlashcards] = useState(false);\n  const [showWrite, toggleWrite] = useState(false);\n  const [questionNum, updateActiveQuestion] = useState(0);\n\n  const [cardDisplay, updateCardState] = useState({\n    side: 0,\n    display: props.location.inputSet.questions[questionNum].question,\n  });\n\n  const flipCard = () => {\n    if (cardDisplay.side === 0) {\n      updateCardState({\n        side: 1,\n        display: props.location.inputSet.questions[questionNum].answer,\n      });\n    } else {\n      updateCardState({\n        side: 0,\n        display: props.location.inputSet.questions[questionNum].question,\n      });\n    }\n  };\n\n  const incrementQuestion = () => {\n    updateActiveQuestion(questionNum + 1);\n  };\n\n  useEffect(() => {\n    updateCardState({\n      side: 1,\n      display: props.location.inputSet.questions[questionNum].question,\n    });\n  }, [props.location.inputSet.questions, questionNum]);\n\n  return (\n    <Styles>\n      <div className=\"flashcards-div\">\n        <Jumbotron>\n          <h1>Welcome to practice!</h1>\n          <h3>Select mode below</h3>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or\n            information.\n          </p>\n          <p>\n            <Button\n              className=\"btn\"\n              variant=\"primary\"\n              onClick={() => toggleFlashcards(!showFlashcards)}\n              aria-controls=\"flashcards-show\"\n              aria-expanded={showFlashcards}\n            >\n              Flashcards\n            </Button>\n            <Button\n              className=\"btn\"\n              variant=\"primary\"\n              onClick={() => toggleWrite(!showWrite)}\n              aria-controls=\"write-show\"\n              aria-expanded={showWrite}\n            >\n              Write\n            </Button>\n          </p>\n        </Jumbotron>\n\n        <Collapse in={showFlashcards}>\n          <div id=\"flashcards-show\">\n            <Jumbotron>\n              <h5>{cardDisplay.display}</h5>\n              <p>\n                <Button className=\"btn-flashcard\" variant=\"primary\" onClick={flipCard}>\n                  Flip\n                </Button>\n                <Button className=\"btn-flashcard\" variant=\"success\" onClick={incrementQuestion}>\n                  Next\n                </Button>\n              </p>\n            </Jumbotron>\n          </div>\n        </Collapse>\n\n        <Collapse in={showWrite}>\n          <div id=\"write-show\">\n            <h1>Write</h1>\n          </div>\n        </Collapse>\n      </div>\n    </Styles>\n  );\n};\n\nexport default Practice;\n"]},"metadata":{},"sourceType":"module"}